{"version":3,"sources":["webpack:///./src/components/conway/conway.js","webpack:///./src/components/conway/game.js","webpack:///./src/pages/code/conway.js"],"names":["ConwayJs","canvasId","options","this","canvas","document","getElementById","rowCount","columnCount","state","getInitialState","width","height","prototype","init","paintBackground","render","ctx","getContext","fillStyle","fillRect","randomize","grid","Array","from","length","map","_","i","j","alive","Math","random","currentRandomizationValue","running","mouseDown","generations","value","handleMousedown","event","handleMousemove","handleMouseup","cellsFromMouseEvent","forEach","cell","paintCell","column","floor","nativeEvent","offsetX","CELL_SIZE","row","offsetY","getCell","startRun","startTime","Date","now","stopRun","reset","checked","tick","paintGrid","requestAnimationFrame","rowIndex","columnIndex","liveNeighbors","liveNeighborCount","newAlive","includes","undefined","loopedIndex","index","filter","c","Container","styled","div","ActionButton","button","ConwaysGame","useRef","game","useState","setRandomize","canvasSize","setCanvasSize","useEffect","current","href","target","rel","ref","id","onMouseDown","e","onMouseMove","onMouseUp","onClick","type","onChange","min","max","defaultValue","size","ConwayPage"],"mappings":"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","file":"component---src-pages-code-conway-js-739e68e31884c8653ad1.js","sourcesContent":["const ROW_COUNT = 100;\nconst COLUMN_COUNT = 150;\nconst CELL_SIZE = 5;\nconst CELL_BORDER_SIZE = 1;\nconst BORDER_COLOR = '#bcd9e0';\nconst CELL_SIZE_WITH_BORDER = CELL_SIZE + CELL_BORDER_SIZE;\n\nfunction ConwayJs(canvasId, options = {}) {\n  this.canvas = document.getElementById(canvasId);\n  this.rowCount = options.rowCount || ROW_COUNT;\n  this.columnCount = options.columnCount || COLUMN_COUNT;\n  this.state = this.getInitialState(true);\n  this.width = this.columnCount * (CELL_SIZE + CELL_BORDER_SIZE);\n  this.height = this.rowCount * (CELL_SIZE + CELL_BORDER_SIZE);\n}\n\nConwayJs.prototype.init = function () {\n  this.paintBackground();\n  this.render();\n}\n\nConwayJs.prototype.paintBackground = function () {\n  const ctx = this.canvas.getContext('2d');\n\n  ctx.fillStyle = BORDER_COLOR;\n  ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n}\n\nConwayJs.prototype.getInitialState = function (randomize = true) {\n  return {\n    grid: Array.from({ length: this.rowCount }).map((_, i) => (\n      Array.from({ length: this.columnCount }).map((_, j) => ({ i, j, alive: Math.random() < (randomize ? this.currentRandomizationValue() : 0) }))\n    )),\n    running: false,\n    mouseDown: false,\n    generations: 0,\n  };\n}\n\nConwayJs.prototype.currentRandomizationValue = function () {\n  return document.getElementById('randomizer-number').value / 100;\n}\n\nConwayJs.prototype.handleMousedown = function (event) {\n  this.state.mouseDown = true;\n  this.handleMousemove(event);\n}\n\nConwayJs.prototype.handleMouseup = function () {\n  this.state.mouseDown = false;\n}\n\nConwayJs.prototype.handleMousemove = function (event) {\n  if (this.state.mouseDown) {\n    const cells = this.cellsFromMouseEvent(event);\n    cells.forEach((cell) => {\n      cell.alive = true;\n      this.paintCell(cell.i, cell.j, cell.alive);\n    });\n  }\n}\n\nConwayJs.prototype.cellsFromMouseEvent = function (event) {\n  const column = Math.floor(event.nativeEvent.offsetX / CELL_SIZE_WITH_BORDER);\n  const row = Math.floor(event.nativeEvent.offsetY / CELL_SIZE_WITH_BORDER);\n\n  return [\n    this.getCell(row, column),\n    this.getCell(row + 1, column),\n    this.getCell(row + 1, column + 1),\n    this.getCell(row, column + 1)\n  ];\n}\n\nConwayJs.prototype.startRun = function () {\n  this.state.running = true;\n  this.state.startTime = Date.now();\n}\n\nConwayJs.prototype.stopRun = function () {\n  this.state.running = false;\n}\n\nConwayJs.prototype.reset = function () {\n  const randomize = document.getElementById('randomize').checked;\n  this.state = this.getInitialState(randomize);\n}\n\nConwayJs.prototype.render = function () {\n  if (this.state.running) {\n    this.tick();\n    this.state.generations += 1;\n  }\n\n  this.paintGrid();\n\n  return requestAnimationFrame(() => this.render());\n}\n\nConwayJs.prototype.paintGrid = function () {\n  this.state.grid.forEach(row => (\n    row.forEach((cell) => this.paintCell(cell.i, cell.j, cell.alive))\n  ));\n}\n\nConwayJs.prototype.paintCell = function (i, j, alive) {\n  const ctx = this.canvas.getContext('2d');\n\n  ctx.fillStyle = alive ? 'black' : 'white';\n  ctx.fillRect(j * CELL_SIZE_WITH_BORDER, i * CELL_SIZE_WITH_BORDER, CELL_SIZE, CELL_SIZE);\n}\n\nConwayJs.prototype.tick = function () {\n  this.state.grid.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      const liveNeighbors = this.liveNeighborCount(rowIndex, columnIndex);\n      cell.newAlive = cell.alive ? [2, 3].includes(liveNeighbors)\n                                 : liveNeighbors === 3;\n    });\n  });\n\n  this.state.grid.forEach((row) => {\n    row.forEach((cell) => {\n      if (cell.newAlive !== cell.alive) {\n        cell.alive = cell.newAlive;\n      }\n      cell.newAlive = undefined;\n    });\n  });\n}\n\nConwayJs.prototype.getCell = function (i, j) {\n  const row = this.loopedIndex(i, this.state.grid.length)\n  const column = this.loopedIndex(j, this.state.grid[row].length)\n\n  return this.state.grid[row][column];\n};\n\nConwayJs.prototype.loopedIndex = function (index, length) {\n  if (index < 0) return index + length;\n  if (index >= length) return index - length;\n  return index;\n}\n\nConwayJs.prototype.liveNeighborCount = function (i, j) {\n  const neighbors = [\n    this.getCell(i - 1, j - 1),\n    this.getCell(i - 1, j),\n    this.getCell(i - 1, j + 1),\n    this.getCell(i, j - 1),\n    this.getCell(i, j + 1),\n    this.getCell(i + 1, j - 1),\n    this.getCell(i + 1, j),\n    this.getCell(i + 1, j + 1),\n  ];\n  return neighbors.filter(c => c && c.alive).length;\n}\n\nexport default ConwayJs;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport ConwayJs from './conway';\n\nconst ConwaysGame = () => {\n  const canvas = useRef(null);\n  const game = useRef({});\n  const [randomize, setRandomize] = useState(true);\n  const [canvasSize, setCanvasSize] = useState({});\n\n  useEffect(() => {\n    game.current = new ConwayJs(\"root\", { columnCount: 100, rowCount: 100 });\n    setCanvasSize({ width: game.current.width, height: game.current.height });\n    game.current.init();\n  }, []);\n\n  const onStart = () => {\n    game.current.startRun();\n  };\n\n  const onStop = () => {\n    game.current.stopRun();\n  };\n\n  const onReset = () => {\n    game.current.reset();\n  };\n\n  const onMouseDown = (e) => {\n    if (game.current) {\n      game.current.handleMousedown(e);\n    }\n  }\n\n  const onMouseUp = (e) => {\n    if (game.current) {\n      game.current.handleMouseup(e);\n    }\n  }\n\n  const onMouseMove = (e) => {\n    if (game.current) {\n      game.current.handleMousemove(e);\n    }\n  }\n\n  const onRandomizeChange = (e) => {\n    setRandomize(e.target.checked);\n  };\n\n  return (\n    <Container>\n      <h1>Conway's Game of Life</h1>\n      <p>\n        A JS implementation of <a href=\"https://en.wikipedia.org/wiki/Conway's_Game_of_Life\" target=\"_blank\" rel=\"noopener noreferrer\">Conway's Game of Life</a>.\n      </p>\n      <p>\n        Click and drag to paint live cells. Press the Start button to start the game.\n        <br />\n        The Reset button randomizes when the corresponding option is checked or clears all cells.\n      </p>\n      <p>\n        Code: <a href=\"https://github.com/zebogen/zebogen.com/blob/master/src/components/conway/game.js\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n      </p>\n      <div>\n        <canvas\n          ref={canvas}\n          width={canvasSize.width}\n          height={canvasSize.height}\n          id=\"root\"\n          onMouseDown={onMouseDown}\n          onMouseMove={onMouseMove}\n          onMouseUp={onMouseUp}\n        ></canvas>\n        <div>\n          <ActionButton id=\"start\" onClick={onStart}>Start</ActionButton>\n          <ActionButton id=\"stop\" onClick={onStop}>Stop</ActionButton>\n          <ActionButton id=\"reset\" onClick={onReset}>Reset</ActionButton>\n          <div>\n            <input type=\"checkbox\" id=\"randomize\" checked={randomize} onChange={onRandomizeChange}></input> Randomize\n            <div id=\"randomizer-fields\">\n              Start with <input type=\"number\" min=\"0\" max=\"100\" id=\"randomizer-number\" defaultValue=\"10\" size=\"2\"></input>% of cells alive\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  )\n};\n\nconst Container = styled.div`\n  text-align: center;\n\n  canvas {\n    border: 1px solid lightgray;\n  }\n`;\n\nconst ActionButton = styled.button`\n  margin-top: 10px;\n`;\n\nexport default ConwaysGame;\n","import React from 'react'\nimport Layout from '../../components/layout';\nimport ConwaysGame from '../../components/conway/game';\n\nconst ConwayPage = () => (\n  <Layout>\n    <ConwaysGame />\n  </Layout>\n)\n\nexport default ConwayPage;\n"],"sourceRoot":""}