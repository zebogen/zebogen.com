{"version":3,"sources":["webpack:///./src/components/conway/conway.js","webpack:///./src/components/conway/game.js","webpack:///./src/pages/code/conway.js"],"names":["ConwayJs","canvas","this","state","getInitialState","prototype","init","paintBackground","paintGrid","render","ctx","getContext","fillStyle","fillRect","width","height","randomize","grid","Array","from","length","map","_","i","j","alive","Math","random","currentRandomizationValue","running","mouseDown","generations","document","getElementById","value","handleMousedown","event","handleMousemove","handleMouseup","cellsFromMouseEvent","forEach","cell","paintCell","column","floor","offsetX","CELL_SIZE","row","offsetY","getCell","startRun","startTime","Date","now","stopRun","reset","checked","tick","requestAnimationFrame","rowIndex","columnIndex","liveNeighbors","liveNeighborCount","newAlive","includes","undefined","loopedIndex","index","filter","c","Container","styled","div","ActionButton","button","ConwaysGame","useRef","game","useState","setRandomize","useEffect","current","ref","id","onClick","type","onChange","e","target","min","max","defaultValue","size","ConwayPage"],"mappings":"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","file":"component---src-pages-code-conway-js-55cebb9b7760317b0b0f.js","sourcesContent":["const ROW_COUNT = 100;\nconst COLUMN_COUNT = 150;\nconst CELL_SIZE = 5;\nconst CELL_BORDER_SIZE = 1;\nconst BORDER_COLOR = '#bcd9e0';\nconst CELL_SIZE_WITH_BORDER = CELL_SIZE + CELL_BORDER_SIZE;\n\nfunction ConwayJs(canvas) {\n  this.canvas = canvas;\n  this.state = this.getInitialState(true);\n}\n\nConwayJs.prototype.init = function () {\n  this.paintBackground();\n  this.paintGrid();\n\n  this.render();\n}\n\nConwayJs.prototype.paintBackground = function () {\n  const ctx = this.canvas.getContext('2d');\n\n  ctx.fillStyle = BORDER_COLOR;\n  ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n}\n\nConwayJs.prototype.getInitialState = function (randomize = false) {\n  return {\n    grid: Array.from({ length: ROW_COUNT }).map((_, i) => (\n      Array.from({ length: COLUMN_COUNT }).map((_, j) => ({ i, j, alive: Math.random() < (randomize ? this.currentRandomizationValue() : 0) }))\n    )),\n    running: false,\n    mouseDown: false,\n    generations: 0,\n  };\n}\n\nConwayJs.prototype.currentRandomizationValue = function () {\n  return document.getElementById('randomizer-number').value / 100;\n}\n\nConwayJs.prototype.handleMousedown = function (event) {\n  this.state.mouseDown = true;\n  this.handleMousemove(event);\n}\n\nConwayJs.prototype.handleMouseup = function () {\n  this.state.mouseDown = false;\n}\n\nConwayJs.prototype.handleMousemove = function (event) {\n  if (this.state.mouseDown) {\n    const cells = this.cellsFromMouseEvent(event);\n    cells.forEach((cell) => {\n      cell.alive = true;\n      this.paintCell(cell.i, cell.j, cell.alive);\n    });\n  }\n}\n\nConwayJs.prototype.cellsFromMouseEvent = function (event) {\n  const column = Math.floor(event.offsetX / CELL_SIZE_WITH_BORDER);\n  const row = Math.floor(event.offsetY / CELL_SIZE_WITH_BORDER);\n\n  return [\n    this.getCell(row, column),\n    this.getCell(row + 1, column),\n    this.getCell(row + 1, column + 1),\n    this.getCell(row, column + 1)\n  ];\n}\n\nConwayJs.prototype.startRun = function () {\n  this.state.running = true;\n  this.state.startTime = Date.now();\n}\n\nConwayJs.prototype.stopRun = function () {\n  this.state.running = false;\n}\n\nConwayJs.prototype.reset = function () {\n  const randomize = document.getElementById('randomize').checked;\n  this.state = this.getInitialState(randomize);\n  this.paintGrid();\n}\n\nConwayJs.prototype.render = function () {\n  if (this.state.running) {\n    this.tick();\n    this.state.generations += 1;\n  }\n\n  return requestAnimationFrame(() => this.render());\n}\n\nConwayJs.prototype.paintGrid = function () {\n  this.state.grid.forEach(row => (\n    row.forEach((cell) => this.paintCell(cell.i, cell.j, cell.alive))\n  ));\n}\n\nConwayJs.prototype.paintCell = function (i, j, alive) {\n  const ctx = this.canvas.getContext('2d');\n\n  ctx.fillStyle = alive ? 'black' : 'white';\n  ctx.fillRect(j * CELL_SIZE_WITH_BORDER, i * CELL_SIZE_WITH_BORDER, CELL_SIZE, CELL_SIZE);\n}\n\nConwayJs.prototype.tick = function () {\n  this.state.grid.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      const liveNeighbors = this.liveNeighborCount(rowIndex, columnIndex);\n      cell.newAlive = cell.alive ? [2, 3].includes(liveNeighbors)\n                                 : liveNeighbors === 3;\n    });\n  });\n\n  this.state.grid.forEach((row) => {\n    row.forEach((cell) => {\n      if (cell.newAlive !== cell.alive) {\n        this.paintCell(cell.i, cell.j, cell.newAlive);\n        cell.alive = cell.newAlive;\n      }\n      cell.newAlive = undefined;\n    });\n  });\n}\n\nConwayJs.prototype.getCell = function (i, j) {\n  const row = this.loopedIndex(i, this.state.grid.length)\n  const column = this.loopedIndex(j, this.state.grid[row].length)\n\n  return this.state.grid[row][column];\n};\n\nConwayJs.prototype.loopedIndex = function (index, length) {\n  if (index < 0) return index + length;\n  if (index >= length) return index - length;\n  return index;\n}\n\nConwayJs.prototype.liveNeighborCount = function (i, j) {\n  const neighbors = [\n    this.getCell(i - 1, j - 1),\n    this.getCell(i - 1, j),\n    this.getCell(i - 1, j + 1),\n    this.getCell(i, j - 1),\n    this.getCell(i, j + 1),\n    this.getCell(i + 1, j - 1),\n    this.getCell(i + 1, j),\n    this.getCell(i + 1, j + 1),\n  ];\n  return neighbors.filter(c => c && c.alive).length;\n}\n\nexport default ConwayJs;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport ConwayJs from './conway';\n\nconst ConwaysGame = () => {\n  const canvas = useRef(null);\n  const game = useRef(null);\n  const [randomize, setRandomize] = useState(true);\n\n  useEffect(() => {\n    game.current = new ConwayJs(canvas.current);\n    game.current.init();\n  }, []);\n\n  const onStart = () => {\n    game.current.startRun();\n  };\n\n  const onStop = () => {\n    game.current.stopRun();\n  };\n\n  const onReset = () => {\n    game.current.reset();\n  };\n\n  const onRandomizeChange = (e) => {\n    setRandomize(e.target.checked);\n  };\n\n  return (\n    <Container>\n      <h1>Conway's Game of Life</h1>\n      <div>\n        <canvas ref={canvas} id=\"root\" width=\"900\" height=\"600\"></canvas>\n        <div>\n          <ActionButton id=\"start\" onClick={onStart}>Start</ActionButton>\n          <ActionButton id=\"stop\" onClick={onStop}>Stop</ActionButton>\n          <ActionButton id=\"reset\" onClick={onReset}>Reset</ActionButton>\n          <div>\n            <input type=\"checkbox\" id=\"randomize\" checked={randomize} onChange={onRandomizeChange}></input> Randomize\n            <div id=\"randomizer-fields\">\n              Start with <input type=\"number\" min=\"0\" max=\"100\" id=\"randomizer-number\" defaultValue=\"10\" size=\"2\"></input>% of cells alive\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  )\n};\n\nconst Container = styled.div`\n  text-align: center;\n\n  canvas {\n    border: 1px solid lightgray;\n  }\n`;\n\nconst ActionButton = styled.button`\n  margin-top: 10px;\n`;\n\nexport default ConwaysGame;\n","import React from 'react'\nimport Layout from '../../components/layout';\nimport ConwaysGame from '../../components/conway/game';\n\nconst ConwayPage = () => (\n  <Layout>\n    <ConwaysGame />\n  </Layout>\n)\n\nexport default ConwayPage;\n"],"sourceRoot":""}